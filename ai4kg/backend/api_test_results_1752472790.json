[
  {
    "endpoint": "/",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "message": "AI4KG API Service",
      "version": "1.0.0"
    },
    "execution_time": 0.007796049118041992
  },
  {
    "endpoint": "/health",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "status": "healthy",
      "service": "ai4kg-backend"
    },
    "execution_time": 0.006918907165527344
  },
  {
    "endpoint": "/api/auth/register",
    "method": "POST",
    "status_code": 400,
    "success": false,
    "response_data": {
      "detail": "Username already registered"
    },
    "error_message": "HTTP Error 400: Bad Request",
    "execution_time": 0.016325950622558594
  },
  {
    "endpoint": "/api/auth/login",
    "method": "POST",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "登录成功",
      "error": null,
      "data": {
        "user": {
          "username": "test_user",
          "email": "test@example.com",
          "id": "fa3f364e-218c-4f64-8530-ebd21d4be10e",
          "created_at": "2025-07-14T05:46:52"
        },
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmYTNmMzY0ZS0yMThjLTRmNjQtODUzMC1lYmQyMWQ0YmUxMGUiLCJ1c2VybmFtZSI6InRlc3RfdXNlciIsImV4cCI6MTc1MjU1OTE5MH0.CYkyD9d0hW3wxKGIyMzdzhuxVmF6E5fxWSM7rsHq-t8"
      }
    },
    "execution_time": 0.21489977836608887
  },
  {
    "endpoint": "/api/auth/verify",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "令牌验证成功",
      "error": null,
      "data": {
        "username": "test_user",
        "email": "test@example.com",
        "id": "fa3f364e-218c-4f64-8530-ebd21d4be10e",
        "created_at": "2025-07-14T05:46:52"
      }
    },
    "execution_time": 0.011790752410888672
  },
  {
    "endpoint": "/api/graphs",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "获取图谱列表成功",
      "error": null,
      "data": {
        "graphs": [],
        "total": 0
      }
    },
    "execution_time": 0.01397395133972168
  },
  {
    "endpoint": "/api/graphs",
    "method": "POST",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "创建图谱成功",
      "error": null,
      "data": {
        "id": "69b786fa-0160-4a9a-967f-5ef816d382a1",
        "title": "测试知识图谱",
        "description": "这是一个用于API测试的知识图谱",
        "user_id": "fa3f364e-218c-4f64-8530-ebd21d4be10e",
        "metadata": {
          "created_at": "2025-07-14T05:59:50",
          "updated_at": "2025-07-14T05:59:50",
          "node_count": 0,
          "edge_count": 0
        }
      }
    },
    "execution_time": 0.011341094970703125
  },
  {
    "endpoint": "/api/graphs/69b786fa-0160-4a9a-967f-5ef816d382a1",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "获取图谱成功",
      "error": null,
      "data": {
        "id": "69b786fa-0160-4a9a-967f-5ef816d382a1",
        "title": "测试知识图谱",
        "description": "这是一个用于API测试的知识图谱",
        "nodes": [],
        "edges": [],
        "metadata": {
          "created_at": "2025-07-14T05:59:50",
          "updated_at": "2025-07-14T05:59:50",
          "node_count": 0,
          "edge_count": 0
        }
      }
    },
    "execution_time": 0.01112508773803711
  },
  {
    "endpoint": "/api/graphs/69b786fa-0160-4a9a-967f-5ef816d382a1",
    "method": "PUT",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "更新图谱成功",
      "error": null,
      "data": {
        "id": "69b786fa-0160-4a9a-967f-5ef816d382a1",
        "title": "更新后的测试图谱",
        "description": "图谱描述已更新",
        "user_id": "fa3f364e-218c-4f64-8530-ebd21d4be10e",
        "metadata": {
          "created_at": "2025-07-14T05:59:50",
          "updated_at": "2025-07-14T05:59:50",
          "node_count": 0,
          "edge_count": 0
        }
      }
    },
    "execution_time": 0.011425971984863281
  },
  {
    "endpoint": "/api/graphs/69b786fa-0160-4a9a-967f-5ef816d382a1",
    "method": "DELETE",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "删除图谱成功",
      "error": null,
      "data": null
    },
    "execution_time": 0.0115509033203125
  },
  {
    "endpoint": "/api/graphs/test_graph_001/nodes",
    "method": "GET",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.007670164108276367
  },
  {
    "endpoint": "/api/graphs/test_graph_001/nodes",
    "method": "POST",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.007508993148803711
  },
  {
    "endpoint": "/api/graphs/test_graph_001/edges",
    "method": "GET",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.003844022750854492
  },
  {
    "endpoint": "/api/graphs/test_graph_001/edges",
    "method": "POST",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.004433155059814453
  },
  {
    "endpoint": "/api/graphs/test_graph_001/nodes/node_001/neighbors",
    "method": "GET",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.003928184509277344
  },
  {
    "endpoint": "/api/graphs/test_graph_001/stats",
    "method": "GET",
    "status_code": 422,
    "success": false,
    "response_data": {
      "detail": [
        {
          "type": "uuid_parsing",
          "loc": [
            "path",
            "graph_id"
          ],
          "msg": "Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1",
          "input": "test_graph_001",
          "ctx": {
            "error": "invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1"
          },
          "url": "https://errors.pydantic.dev/2.5/v/uuid_parsing"
        }
      ]
    },
    "error_message": "HTTP Error 422: Unprocessable Entity",
    "execution_time": 0.0041120052337646484
  },
  {
    "endpoint": "/api/search",
    "method": "GET",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "全文搜索功能待实现",
      "error": null,
      "data": []
    },
    "execution_time": 0.0037069320678710938
  },
  {
    "endpoint": "/api/query",
    "method": "POST",
    "status_code": 200,
    "success": true,
    "response_data": {
      "success": true,
      "message": "Cypher查询功能待实现",
      "error": null,
      "data": []
    },
    "execution_time": 0.006803989410400391
  }
]